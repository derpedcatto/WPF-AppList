<Window x:Class="WPF_AppList._5_Resources_Triggers.TriggersWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_AppList._5_Resources_Triggers"
        mc:Ignorable="d"
        Title="TriggersWindow" 
        Height="450"
        Width="800">

    <!-- Триггер - синоним "обработчик события" - действие,
         запускаемое при определенных обстоятельствах 
         В WPF различают триггеры стилей, событий, данных -->

    <Window.Resources>
        <Style TargetType="Button">
            <!-- Наличие триггеров требует отделения сеттеров
                 в отдельную секцию -->
            <Style.Setters>
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Margin" Value="7" />
                <Setter Property="Padding" Value="7,3" />
            </Style.Setters>

            <!-- Секция триггеров -->
            <Style.Triggers>
                <!-- Стилевые триггеры - управление стилями -->
                <Trigger Property="IsMouseOver" Value="True">
                    <!-- Данный триггер сработает когда мышь над элементом -->
                    <Setter Property="FontSize" Value="25" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <!-- Не все стили доступны в триггерах -->
                    <Setter Property="Background" Value="DeepPink"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <!-- Кнопка нажата и удерживатся -->
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>

                <!-- Триггеры событый -->
                <EventTrigger RoutedEvent="Click">
                    <!-- Триггер, следящий за нажатием -->
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Создание анимации -->
                                <!-- DoubleAnimation - анимация плавного изменения числовой хар-ки -->
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Width"
                                    To="200"
                                    Duration="0:0:0.2"
                                    AutoReverse="True" />

                                <!-- Несколько анимаций запускаются одновременно -->
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Height"
                                    To="60"
                                    Duration="0:0:0.2"
                                    AutoReverse="True" />
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.4"
                                    Duration="0:0:0.3"
                                    AutoReverse="True" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <StackPanel>
        <Button Height="46" Width="150" Content="Button 1" />
        <Button Height="46" Width="150" Content="Button 2" />
        <Button Height="46" Width="150" Content="Button 3" />

        <!-- Кнопка с отдельным поведением -->
        <Button Height="46" Width="150" Content="Button 4">
            <Button.Style>
                <!-- Переопределение стиля отменят общие триггеры -->
                <Style TargetType="Button">
                    <Setter Property="BorderBrush" Value="BlueViolet"/>

                    <Style.Triggers>
                        <!-- Наведение -->

                        <!-- Нажатие -->
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!-- Триггеры данных - отметка acceptCheckbox должна
             активировать/деактивировать кнопку Send -->
        <CheckBox x:Name="acceptCheckbox" Content="Accept">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <Setter Property="FontSize" Value="20"/>
                    <Style.Triggers>
                        <!-- Триггер данных "отслеживает" значение элементов 
                             Указывается ElementName - имя элемента,
                             Path - атрибут. Триггер срабатывает на заданное 
                             значение (True) -->
                        <DataTrigger
                            Binding="{Binding ElementName=acceptCheckbox, Path=IsChecked}"
                            Value="True" >
                            <!-- Сеттер срабатывает если acceptCheckbox.IsChecked == True -->
                            <Setter Property="Foreground" Value="Green"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <Button Content="Send"  Height="46" Width="150" >
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ElementName=acceptCheckbox, Path=IsChecked}"
                            Value="False" >
                            <!-- По умолчанию любая кнопка активна. Поэтому создаем "обратный"
                             эффект - отслеживаем значение False и деактивируем кнопку по нему -->
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </StackPanel>
</Window>
<!-- Разработать "Форму регистрации" нового пользователя
    Использовать стили и все виды триггеров. -->